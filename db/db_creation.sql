CREATE DATABASE IF NOT EXISTS social;

USE social;

CREATE TABLE `User` (
  id VARCHAR(191) PRIMARY KEY,
  email VARCHAR(191) UNIQUE NOT NULL,
  username VARCHAR(191) UNIQUE NOT NULL,
  avatar VARCHAR(191),
  cover VARCHAR(191),
  name VARCHAR(191),
  surname VARCHAR(191),
  description VARCHAR(191),
  city VARCHAR(191),
  school VARCHAR(191),
  work VARCHAR(191),
  website VARCHAR(191),
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE Post (
  id INT AUTO_INCREMENT PRIMARY KEY,
  `desc` TEXT NOT NULL,
  img VARCHAR(191),
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  userId VARCHAR(191),
  FOREIGN KEY (userId) REFERENCES `User`(id) ON DELETE CASCADE
);

CREATE TABLE Comment (
  id INT AUTO_INCREMENT PRIMARY KEY,
  `desc` TEXT NOT NULL,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  userId VARCHAR(191),
  postId INT,
  FOREIGN KEY (userId) REFERENCES `User`(id) ON DELETE CASCADE,
  FOREIGN KEY (postId) REFERENCES Post(id) ON DELETE CASCADE
);

CREATE TABLE `Like` (
  id INT AUTO_INCREMENT PRIMARY KEY,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  userId VARCHAR(191),
  postId INT,
  commentId INT,
  FOREIGN KEY (userId) REFERENCES `User`(id) ON DELETE CASCADE,
  FOREIGN KEY (postId) REFERENCES Post(id) ON DELETE CASCADE,
  FOREIGN KEY (commentId) REFERENCES Comment(id) ON DELETE CASCADE
);

CREATE TABLE Follower (
  id INT AUTO_INCREMENT PRIMARY KEY,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  followerId VARCHAR(191),
  followingId VARCHAR(191),
  FOREIGN KEY (followerId) REFERENCES `User`(id) ON DELETE CASCADE,
  FOREIGN KEY (followingId) REFERENCES `User`(id) ON DELETE CASCADE
);

CREATE TABLE FollowRequest (
  id INT AUTO_INCREMENT PRIMARY KEY,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  senderId VARCHAR(191),
  receiverId VARCHAR(191),
  FOREIGN KEY (senderId) REFERENCES `User`(id) ON DELETE CASCADE,
  FOREIGN KEY (receiverId) REFERENCES `User`(id) ON DELETE CASCADE,
  UNIQUE (senderId, receiverId)
);

CREATE TABLE Block (
  id INT AUTO_INCREMENT PRIMARY KEY,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  blockerId VARCHAR(191),
  blockedId VARCHAR(191),
  FOREIGN KEY (blockerId) REFERENCES `User`(id) ON DELETE CASCADE,
  FOREIGN KEY (blockedId) REFERENCES `User`(id) ON DELETE CASCADE,
  UNIQUE (blockerId, blockedId)
);

CREATE TABLE Story (
  id INT AUTO_INCREMENT PRIMARY KEY,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  expiresAt DATETIME NOT NULL,
  img VARCHAR(191) NOT NULL,
  userId VARCHAR(191) UNIQUE,
  FOREIGN KEY (userId) REFERENCES `User`(id) ON DELETE CASCADE
);
